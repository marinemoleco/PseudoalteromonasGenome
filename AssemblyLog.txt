## Content
# Aim and reference genome
# 1. Initial steps
# 2. spades de novo assembly
# 3. possible deduplication and normalization steps before assembly
# 4. read mapping on reference genome
# 5. contig mapping on reference genome
# 6. blast against ref genome and use contigs as query
# 7. spades assemlby using reference genome as trusted contigs


##############################
## Aim and reference genome ##

"Obtain a full Pseudoalteromonas rubra genome"

Reference genome based on 16S rRNA gene blast result: Pseudoalteromonas rubra strain SCSIO 6842 

All                5,913,780
Chromosome 1	   4,532,889
Chromosome 2	   1,311,023
Plasmid pMBL6842    69,868

https://www.ncbi.nlm.nih.gov/assembly/GCA_001482385.1


######################
## 1. Initial steps ##

# Quality control
fastqc *.gz
multiqc .

# Sample Name	% Dups	% GC	M Seqs
# NG-19286_1783_0s_lib326994_6367_2_1	22.0%	47%	4.5
# NG-19286_1783_0s_lib326994_6367_2_2	22.0%	47%	4.5
# NG-19286_1783_0s_lib326994_6377_2_1	31.4%	47%	3.8
# NG-19286_1783_0s_lib326994_6377_2_2	30.9%	47%	3.8

# merge libraries
cat *_1.fastq.gz > NG_1783_R1.fastq.gz
cat *_2.fastq.gz > NG_1783_R2.fastq.gz


################################
## 2. spades de novo assembly ##

spades.py -1 NG_1783_R1.fastq.gz -2 NG_1783_R2.fastq.gz -o spades_NG_1783_denovo_cf_oa_v1 -t 2 -k 21,33,55,77 --careful --only-assembler

A	C	G	T	N	IUPAC	Other	GC	GC_stdev
0.2651	0.2433	0.2318	0.2598	0.0000	0.0000	0.0000	0.4751	0.0794

Main genome scaffold total:         	531
Main genome contig total:           	531
Main genome scaffold sequence total:	5.975 MB
Main genome contig sequence total:  	5.975 MB  	0.000% gap
Main genome scaffold N/L50:         	8/222.155 KB
Main genome contig N/L50:           	8/222.155 KB
Main genome scaffold N/L90:         	27/48.635 KB
Main genome contig N/L90:           	27/48.635 KB
Max scaffold length:                	861.495 KB
Max contig length:                  	861.495 KB
Number of scaffolds > 50 KB:        	25
% main genome in scaffolds > 50 KB: 	88.77%


Minimum 	Number        	Number        	Total         	Total         	Scaffold
Scaffold	of            	of            	Scaffold      	Contig        	Contig  
Length  	Scaffolds     	Contigs       	Length        	Length        	Coverage
--------	--------------	--------------	--------------	--------------	--------
    All 	           531	           531	     5,974,904	     5,974,904	 100.00%
     50 	           531	           531	     5,974,904	     5,974,904	 100.00%
    100 	           456	           456	     5,968,435	     5,968,435	 100.00%
    250 	           156	           156	     5,914,072	     5,914,072	 100.00%
    500 	            79	            79	     5,890,926	     5,890,926	 100.00%
   1 KB 	            61	            61	     5,879,752	     5,879,752	 100.00%
 2.5 KB 	            46	            46	     5,856,032	     5,856,032	 100.00%
   5 KB 	            45	            45	     5,852,679	     5,852,679	 100.00%
  10 KB 	            43	            43	     5,835,401	     5,835,401	 100.00%
  25 KB 	            35	            35	     5,690,421	     5,690,421	 100.00%
  50 KB 	            25	            25	     5,303,816	     5,303,816	 100.00%
 100 KB 	            21	            21	     5,020,661	     5,020,661	 100.00%
 250 KB 	             6	             6	     2,522,577	     2,522,577	 100.00%
 500 KB 	             1	             1	       861,495	       861,495	 100.00%

# 2.1 remove short contigs < 500 or < 1000

# 2.2 can I bin the contigs into the 3 SCISO genome parts? cocacola binning?

# 2.3 Normalized and error correction

spades.py -1 NG_1783_R1_bbduk_bbnorm.fastq.gz -2 NG_1783_R2_bbduk_bbnorm.fastq.gz -o spades_NG_1783_bbduk_norm_denovo_cf_v1 -t 8 -k 21,33,55,77 --careful --only-assembler -t 8

A	C	G	T	N	IUPAC	Other	GC	GC_stdev
0.2618	0.2356	0.2397	0.2630	0.0000	0.0000	0.0000	0.4753	0.0750

Main genome scaffold total:         	275
Main genome contig total:           	275
Main genome scaffold sequence total:	5.921 MB
Main genome contig sequence total:  	5.921 MB  	0.000% gap
Main genome scaffold N/L50:         	9/217.637 KB
Main genome contig N/L50:           	9/217.637 KB
Main genome scaffold N/L90:         	27/64.374 KB
Main genome contig N/L90:           	27/64.374 KB
Max scaffold length:                	861.162 KB
Max contig length:                  	861.162 KB
Number of scaffolds > 50 KB:        	28
% main genome in scaffolds > 50 KB: 	91.31%


Minimum 	Number        	Number        	Total         	Total         	Scaffold
Scaffold	of            	of            	Scaffold      	Contig        	Contig  
Length  	Scaffolds     	Contigs       	Length        	Length        	Coverage
--------	--------------	--------------	--------------	--------------	--------
    All 	           275	           275	     5,921,002	     5,921,002	 100.00%
     50 	           275	           275	     5,921,002	     5,921,002	 100.00%
    100 	           256	           256	     5,919,449	     5,919,449	 100.00%
    250 	           137	           137	     5,897,892	     5,897,892	 100.00%
    500 	            89	            89	     5,882,304	     5,882,304	 100.00%
   1 KB 	            67	            67	     5,867,484	     5,867,484	 100.00%
 2.5 KB 	            47	            47	     5,836,786	     5,836,786	 100.00%
   5 KB 	            43	            43	     5,821,648	     5,821,648	 100.00%
  10 KB 	            41	            41	     5,807,276	     5,807,276	 100.00%
  25 KB 	            35	            35	     5,677,780	     5,677,780	 100.00%
  50 KB 	            28	            28	     5,406,418	     5,406,418	 100.00%
 100 KB 	            20	            20	     4,837,585	     4,837,585	 100.00%
 250 KB 	             8	             8       2,893,114	     2,893,114	 100.00%
 500 KB 	             1	             1	       861,162	       861,162	 100.00%

# 2.4 map reads on contigs - or create an anvio file

#######################################################################
## 3. possible deduplication and normalization steps before assembly ##

# adapter and contamination removal
~/phylo/bbmap/bbduk.sh in1=NG_1783_R1.fastq.gz in2=NG_1783_R2.fastq.gz out1=NG_1783_R1_bbduk.fastq.gz out2=NG_1783_R2_bbduk.fastq.gz ref=~/phylo/bbmap/resources/adapters.fa ktrim=r k=23 mink=11 hdist=1 tpe tbo

BBDuk version 37.66
maskMiddle was disabled because useShortKmers=true
Initial:
Memory: max=1407m, free=1376m, used=31m

Added 216529 kmers; time: 	0.372 seconds.
Memory: max=1407m, free=1310m, used=97m

Input is being processed as paired
Started output streams:	0.362 seconds.
Processing time:   		500.187 seconds.

Input:                  	16560750 reads 		2500673250 bases.
KTrimmed:               	109614 reads (0.66%) 	2898976 bases (0.12%)
Trimmed by overlap:     	52638 reads (0.32%) 	495056 bases (0.02%)
Total Removed:          	50 reads (0.00%) 	3394032 bases (0.14%)
Result:                 	16560700 reads (100.00%) 	2497279218 bases (99.86%)

Time:   			500.947 seconds.
Reads Processed:      16560k 	33.06k reads/sec
Bases Processed:       2500m 	4.99m bases/sec

# normalization

~/phylo/bbmap/bbnorm.sh in1=NG_1783_R1_bbduk.fastq.gz in2=NG_1783_R2_bbduk.fastq.gz out1=NG_1783_R1_bbduk_bbnorm.fastq.gz out2=NG_1783_R2_bbduk_bbnorm.fastq.gz target=100 min=3

Total reads in:  		14506466 	36.101% Kept
Total bases in:  		2187508126 	36.103% Kept
Error reads in:  		493769   	3.404%
Error pairs in:  		429288   	5.919%
Error type 1:    		26345    	0.182%
Error type 2:    		466599    	3.216%
Error type 3:    		471033    	3.247%
Total kmers counted:          	1752271855
Total unique kmer count:      	32740694
Includes forward kmers only.
The unique kmer estimate can be more accurate than the unique count, if the tables are very full.
The most accurate value is the greater of the two.

Percent unique:               	 1.87%
Depth average:                	53.52	(unique kmers)
Depth median:                 	1	(unique kmers)
Depth standard deviation:     	111.46	(unique kmers)
Corrected depth average:      	53.52	

Depth average:                	285.63	(all kmers)
Depth median:                 	286	(all kmers)
Depth standard deviation:     	75.83	(all kmers)

Approx. read depth median:    	357.03

Removing temp files.

Total time:      		509.698 seconds.   	9191.30 kb/sec

# deduplication
~/phylo/bbmap/dedupe.sh in1=NG_1783_R1_bbduk_bbnorm.fastq.gz in2=NG_1783_R2_bbduk_bbnorm.fastq.gz out=NG_1783_bbduk_bbnorm_dedup.fastq.gz ac=f
reformat.sh in=NG_1783_bbduk_bbnorm_dedup.fastq.gz out1=NG_1783_R1_bbduk_bbnorm_dedup.fastq.gz out2=NG_1783_R2_bbduk_bbnorm_dedup.fastq.gz

Pair Limitations:
Dedupe supports paired reads, but it was not really designed for them. When processing paired reads, some parts of Dedupe are restricted to a single thread due to a complication that causes non-deterministic output. As such, processing paired reads is slower than unpaired reads. Also, pair support is limited to exact matches and overlaps, not containments.

# alternatively

# clumpify and deduplication
clumpify.sh in=reads.fq.gz out=clumped.fq.gz dedupe subs=0

Paired reads:
Clumpify supports paired reads, in which case it will clump based on read 1 only. However, itâ€™s much more effective to treat reads as unpaired. For example, merge the reads with BBMerge, then concatenate the merged reads with the unmerged pairs, and clump them all together as unpaired.

# PE merge - optional might need concatenation of unmerged reads
bbmerge.sh in1=NG_1783_R1.fastq.gz in2=NG_1783_R2.fastq.gz out=NG_1783_merged.fastq.gz outu=NG_1783_unmerged.fastq.gz ihist=ihist.txt

(((NOTE - maybe just bbduk and bbnorm - too many issues with dedupe and clumpify and bbmerge - first spades assembly already looked really good)))


#########################################
## 4. read mapping on reference genome ##

bowtie2-build mapping/GCF_001482385.1_ASM148238v1_genomic.fna mapping/GCF_001482385.1_ASM148238v1_genomic

bowtie2 --threads 2 --very-sensitive -x mapping/GCF_001482385.1_ASM148238v1_genomic -1 NG_1783_R1_bbduk.fastq -2 NG_1783_R2_bbduk.fastq -S mapping/NG_1783.sam --un-conc-gz mapping/unmapped.fastq.gz --al-conc-gz mapping/mapped.fastq.gz

8280350 reads; of these:
  8280350 (100.00%) were paired; of these:
    4437287 (53.59%) aligned concordantly 0 times
    3738078 (45.14%) aligned concordantly exactly 1 time
    104985 (1.27%) aligned concordantly >1 times
    ----
    4437287 pairs aligned concordantly 0 times; of these:
      913846 (20.59%) aligned discordantly 1 time
    ----
    3523441 pairs aligned 0 times concordantly or discordantly; of these:
      7046882 mates make up the pairs; of these:
        6016678 (85.38%) aligned 0 times
        945395 (13.42%) aligned exactly 1 time
        84809 (1.20%) aligned >1 times
63.67% overall alignment rate

samtools view -F 4 -bS mapping/NG_1783.sam > mapping/NG_1783.bam


###########################################
## 5. contig mapping on reference genome ##

bowtie2 --sensitive-local --threads 8 -f -x ./mapping/GCF_001482385.1_ASM148238v1_genomic -U ./spades_NG_1783_bbduk_norm_denovo_cf_v1/contigs.fasta -S ./mapping/NG_1783_contigs.sam --un ./mapping/unmapped_contigs.fasta --al mapping/mapped_contigs.fasta

(((NOTE - does not work - probably not a good idea to align large contigs against 2 chromosomes and 1 plasmid)))

# try mummer?


##########################################################
## 6. blast against ref genome and use contigs as query ##

makeblastdb -in GCF_001482385.1_ASM148238v1_genomic.fna -out GCF_001482385.1_ASM148238v1_genomic -dbtype 'nucl' -hash_index

blastn -query fastq/spades_NG_1783_denovo_cf_oa_v1/contigs.fasta -max_target_seqs 3 -evalue 100 -outfmt 6 -out spades_NG_1783_denovo_cf_oa_v1_contigs.txt -db SCSIO6842blast/GCF_001482385.1_ASM148238v1_genomic

(((NOTE - repeat with contigs > 1000 and more strict parameters)))

blastn -query spades_NG_1783_bbduk_norm_denovo_cf_v1/contigs.1000.fasta -max_target_seqs 1 -evalue 10 -outfmt 6 -out spades_NG_1783_bbduk_norm_denovo_cf_v1_contigs.txt -db SCSIO6842blast/GCF_001482385.1_ASM148238v1_genomic -num_threads 8

##################################################################
## 7. spades assemlby using reference genome as trusted contigs ##
# not a good idea - spades says "Note, that SPAdes does not perform assembly using genomes of closely-related species. Only contigs of the same genome should be specified."
